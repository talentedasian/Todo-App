# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: [ push ]
    
jobs:
    container-job:
      runs-on: ubuntu-latest

      services:
        postgres_db:
          image: postgres
          env:
            POSTGRES_USER: test
            POSTGRES_PASSWORD: test
            POSTGRES_DB: test
          ports:
           - 2222:5432
         # needed because the postgres container does not provide a healthcheck
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Build with Maven
        id: Maven 
        run: mvn verify
        env:
          "TWILLIO_PHONE_NUMBER": ${{ secrets.TWILLIO_PHONE_NUMBER }}
          "TWILLIO_ACCOUNT_SID": ${{ secrets.TWILLIO_ACCOUNT_SID }}
          "TWILLIO_ACCOUNT_TOKEN": ${{ secrets.TWILLIO_ACCOUNT_TOKEN }}
      - name: Login To Heroku
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login lucenaalmirjames123@gmail.com
              password $HEROKU_API_KEY
            machine git.heroku.com
              login lucenaalmirjames123@gmail.com
              password $HEROKU_API_KEY
          EOF
          cat ~/.netrc
          heroku git:remote -a todo-app-spring-malaysian
          git remote -v
          git remote add heroku https://git.heroku.com/todo-app-spring-malaysian.git
          git remote -v
          git push heroku master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Add Heroku remote
        run: heroku git:remote --app todo-app-spring-malaysian
