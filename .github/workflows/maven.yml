# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: [ push ]
    
jobs:
    container-job:
      runs-on: ubuntu-latest

      services:
        postgres_db:
          image: postgres
          env:
            POSTGRES_USER: test
            POSTGRES_PASSWORD: test
            POSTGRES_DB: test
          ports:
           - 2222:5432
         # needed because the postgres container does not provide a healthcheck
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


      steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Build with Maven
        id: Maven 
        run: mvn verify
        env:
          "TWILLIO_PHONE_NUMBER": ${{ secrets.TWILLIO_PHONE_NUMBER }}
          "TWILLIO_ACCOUNT_SID": ${{ secrets.TWILLIO_ACCOUNT_SID }}
          "TWILLIO_ACCOUNT_TOKEN": ${{ secrets.TWILLIO_ACCOUNT_TOKEN }}

      - name: Add heroku remote
        run: heroku git:remote -a todo-app-spring-malaysian
      - name: Deploy To Docker
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: "lucenaalmirjames123@gmail.com"
          heroku_app_name: "todo-app-spring-malaysian"
          justlogin: true
      - run: |
          heroku container:login
          git push heroku master
        
